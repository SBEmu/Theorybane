{"version":3,"sources":["components/Stat.tsx","components/CharacterSheet.tsx","components/Character.tsx","App.tsx","index.tsx"],"names":["Stat","this","props","name","amount","maxAmount","onClick","onAdd","role","aria-label","onSubtract","onMax","onMin","Component","CharacterSheet","addDexterity","bind","subtractDexterity","maximizeDexterity","minimizeDexterity","addStrength","subtractStrength","maximizeStrength","minimizeStrength","addIntelligence","subtractIntelligence","maximizeIntelligence","minimizeIntelligence","addSpirit","subtractSpirit","maximizeSpirit","minimizeSpirit","addConstitution","subtractConstitution","maximizeConstitution","minimizeConstitution","stats","character","className","getAbilityPoints","dexterity","maxDexterity","strength","maxStrength","intelligence","maxIntelligence","spirit","maxSpirit","constitution","maxConstitution","invokeChange","current","max","toAdd","Math","min","minDexterity","minStrength","minIntelligence","minSpirit","minConstitution","change","notifyChanged","e","alert","message","Character","state","TheorybaneCharacter","forceUpdate","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60c1b3c6.chunk.js","sourcesContent":["import React, {Component, ReactNode} from \"react\";\n\ninterface Props {\n    name: string,\n    amount: number,\n    maxAmount: number,\n    onAdd(): void,\n    onSubtract(): void,\n    onMax(): void,\n    onMin(): void\n}\n\n\n\nexport class Stat extends Component<Props> {\n    render(): ReactNode {\n        return (\n            <div>{this.props.name}:\n                &nbsp;{this.props.amount}/{this.props.maxAmount} ({this.props.amount})&nbsp;\n                <button onClick={this.props.onAdd}><span role=\"img\" aria-label=\"add\">üîº</span></button>\n                <button onClick={this.props.onSubtract}><span role=\"img\" aria-label=\"subtract\">üîΩ</span></button>\n                <button onClick={this.props.onMax}><span role=\"img\" aria-label=\"maximize\">‚è´</span></button>\n                <button onClick={this.props.onMin}><span role=\"img\" aria-label=\"minimize\">‚è¨</span></button>\n            </div>)\n    }\n}","import React, {Component, ReactNode} from \"react\";\nimport {Character as TheorybaneCharacter} from '@sbemu/libtheorybane'\nimport {Stat} from \"./Stat\";\n\ninterface Props {\n    character: TheorybaneCharacter\n    notifyChanged(): void\n}\n\nexport class CharacterSheet extends Component<Props> {\n    constructor(props: Props) {\n        super(props)\n        this.addDexterity = this.addDexterity.bind(this);\n        this.subtractDexterity = this.subtractDexterity.bind(this);\n        this.maximizeDexterity = this.maximizeDexterity.bind(this);\n        this.minimizeDexterity = this.minimizeDexterity.bind(this);\n        this.addStrength = this.addStrength.bind(this);\n        this.subtractStrength = this.subtractStrength.bind(this);\n        this.maximizeStrength = this.maximizeStrength.bind(this);\n        this.minimizeStrength = this.minimizeStrength.bind(this);\n        this.addIntelligence = this.addIntelligence.bind(this);\n        this.subtractIntelligence = this.subtractIntelligence.bind(this);\n        this.maximizeIntelligence = this.maximizeIntelligence.bind(this);\n        this.minimizeIntelligence = this.minimizeIntelligence.bind(this);\n        this.addSpirit = this.addSpirit.bind(this);\n        this.subtractSpirit = this.subtractSpirit.bind(this);\n        this.maximizeSpirit = this.maximizeSpirit.bind(this);\n        this.minimizeSpirit = this.minimizeSpirit.bind(this);\n        this.addConstitution = this.addConstitution.bind(this);\n        this.subtractConstitution = this.subtractConstitution.bind(this);\n        this.maximizeConstitution = this.maximizeConstitution.bind(this);\n        this.minimizeConstitution = this.minimizeConstitution.bind(this);\n    }\n\n    render(): ReactNode {\n        const stats = this.props.character.stats\n        return (\n            <div className='character-sheet'>\n                Ability points: {this.props.character.getAbilityPoints()}\n                <Stat name=\"Dexterity\"\n                      amount={stats.dexterity}\n                      maxAmount={stats.maxDexterity}\n                      onAdd={this.addDexterity}\n                      onSubtract={this.subtractDexterity}\n                      onMax={this.maximizeDexterity}\n                      onMin={this.minimizeDexterity} />\n                <Stat name=\"Strength\"\n                      amount={stats.strength}\n                      maxAmount={stats.maxStrength}\n                      onAdd={this.addStrength}\n                      onSubtract={this.subtractStrength}\n                      onMax={this.maximizeStrength}\n                      onMin={this.minimizeStrength} />\n                <Stat name=\"Intelligence\"\n                      amount={stats.intelligence}\n                      maxAmount={stats.maxIntelligence}\n                      onAdd={this.addIntelligence}\n                      onSubtract={this.subtractIntelligence}\n                      onMax={this.maximizeIntelligence}\n                      onMin={this.minimizeIntelligence} />\n                <Stat name=\"Spirit\"\n                      amount={stats.spirit}\n                      maxAmount={stats.maxSpirit}\n                      onAdd={this.addSpirit}\n                      onSubtract={this.subtractSpirit}\n                      onMax={this.maximizeSpirit}\n                      onMin={this.minimizeSpirit} />\n                <Stat name=\"Constitution\"\n                      amount={stats.constitution}\n                      maxAmount={stats.maxConstitution}\n                      onAdd={this.addConstitution}\n                      onSubtract={this.subtractConstitution}\n                      onMax={this.maximizeConstitution}\n                      onMin={this.minimizeConstitution} />\n            </div>\n        )\n    }\n    \n    addDexterity(): void {\n        this.invokeChange(() => this.props.character.addDexterity(1))\n    }\n\n    subtractDexterity(): void {\n        this.invokeChange(() => this.props.character.subtractDexterity(1))\n    }\n\n    maximizeDexterity(): void {\n        const current = this.props.character.stats.dexterity\n        const max = this.props.character.stats.maxDexterity\n        const toAdd = Math.min(max - current, this.props.character.getAbilityPoints())\n        this.invokeChange(() => this.props.character.addDexterity(toAdd))\n    }\n\n    minimizeDexterity(): void {\n        const current = this.props.character.stats.dexterity\n        const min = this.props.character.stats.minDexterity\n        this.invokeChange(() => this.props.character.subtractDexterity(current - min))\n    }\n\n    addStrength(): void {\n        this.invokeChange(() => this.props.character.addStrength(1))\n    }\n\n    subtractStrength(): void {\n        this.invokeChange(() => this.props.character.subtractStrength(1))\n    }\n\n    maximizeStrength(): void {\n        const current = this.props.character.stats.strength\n        const max = this.props.character.stats.maxStrength\n        const toAdd = Math.min(max - current, this.props.character.getAbilityPoints())\n        this.invokeChange(() => this.props.character.addStrength(toAdd))\n    }\n\n    minimizeStrength(): void {\n        const current = this.props.character.stats.strength\n        const min = this.props.character.stats.minStrength\n        this.invokeChange(() => this.props.character.subtractStrength(current - min))\n    }\n\n    addIntelligence(): void {\n        this.invokeChange(() => this.props.character.addIntelligence(1))\n    }\n\n    subtractIntelligence(): void {\n        this.invokeChange(() => this.props.character.subtractIntelligence(1))\n    }\n\n    maximizeIntelligence(): void {\n        const current = this.props.character.stats.intelligence\n        const max = this.props.character.stats.maxIntelligence\n        const toAdd = Math.min(max - current, this.props.character.getAbilityPoints())\n        this.invokeChange(() => this.props.character.addIntelligence(toAdd))\n    }\n\n    minimizeIntelligence(): void {\n        const current = this.props.character.stats.intelligence\n        const min = this.props.character.stats.minIntelligence\n        this.invokeChange(() => this.props.character.subtractIntelligence(current - min))\n    }\n\n    addSpirit(): void {\n        this.invokeChange(() => this.props.character.addSpirit(1))\n    }\n\n    subtractSpirit(): void {\n        this.invokeChange(() => this.props.character.subtractSpirit(1))\n    }\n\n    maximizeSpirit(): void {\n        const current = this.props.character.stats.spirit\n        const max = this.props.character.stats.maxSpirit\n        const toAdd = Math.min(max - current, this.props.character.getAbilityPoints())\n        this.invokeChange(() => this.props.character.addSpirit(toAdd))\n    }\n\n    minimizeSpirit(): void {\n        const current = this.props.character.stats.spirit\n        const min = this.props.character.stats.minSpirit\n        this.invokeChange(() => this.props.character.subtractSpirit(current - min))\n    }\n\n    addConstitution(): void {\n        this.invokeChange(() => this.props.character.addConstitution(1))\n    }\n\n    subtractConstitution(): void {\n        this.invokeChange(() => this.props.character.subtractConstitution(1))\n    }\n\n    maximizeConstitution(): void {\n        const current = this.props.character.stats.constitution\n        const max = this.props.character.stats.maxConstitution\n        const toAdd = Math.min(max - current, this.props.character.getAbilityPoints())\n        this.invokeChange(() => this.props.character.addConstitution(toAdd))\n    }\n\n    minimizeConstitution(): void {\n        const current = this.props.character.stats.constitution\n        const min = this.props.character.stats.minConstitution\n        this.invokeChange(() => this.props.character.subtractConstitution(current - min))\n    }\n    \n    invokeChange(change: () => void)\n    {\n        try {\n            change()\n            this.props.notifyChanged()\n        } catch (e) {\n            alert(e.message)\n        }\n    }\n}","import React, {Component, ReactNode} from \"react\";\nimport {Character as TheorybaneCharacter} from '@sbemu/libtheorybane'\nimport {CharacterSheet} from \"./CharacterSheet\";\n\ninterface Props {}\ninterface State {\n    character: TheorybaneCharacter\n}\n\nexport class Character extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            character: new TheorybaneCharacter()\n        }\n\n        this.notifyChanged = this.notifyChanged.bind(this)\n    }\n\n    render(): ReactNode {\n        return (\n          <div>\n              <CharacterSheet notifyChanged={this.notifyChanged} character={this.state.character} />\n          </div>\n        )\n    }\n\n    notifyChanged(): void {\n        this.forceUpdate()\n    }\n}","import React from 'react';\nimport './App.css';\nimport {Character} from './components/Character'\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Character />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}